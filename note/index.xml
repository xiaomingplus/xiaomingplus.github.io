<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on 小明plus</title>
    <link>http://xiaomingplus.com/note/</link>
    <description>Recent content in Notes on 小明plus</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 06 Jan 2016 02:52:18 +0800</lastBuildDate>
    <atom:link href="http://xiaomingplus.com/note/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>hugo博客从创建到托管到github教程</title>
      <link>http://xiaomingplus.com/note/hugo-quick-start/</link>
      <pubDate>Wed, 06 Jan 2016 02:52:18 +0800</pubDate>
      
      <guid>http://xiaomingplus.com/note/hugo-quick-start/</guid>
      <description>

&lt;p&gt;通过本教程，你可以拥有一个使用hugo生成的github静态博客。&lt;/p&gt;

&lt;h3 id=&#34;1-安装hugo:bc48ff5599e6287f536e00689641cade&#34;&gt;1.安装hugo&lt;/h3&gt;

&lt;p&gt;mac os：&lt;code&gt;brew install hugo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(如果没有brew，参考官方教程 &lt;a href=&#34;https://gohugo.io/tutorials/installing-on-mac/&#34;&gt;https://gohugo.io/tutorials/installing-on-mac/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;windows:直接下载最新版的exe文件安装即可，下载地址&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt; ，可参考&lt;a href=&#34;https://gohugo.io/tutorials/installing-on-windows/&#34;&gt;https://gohugo.io/tutorials/installing-on-windows/&lt;/a&gt; 来配置环境变量&lt;/p&gt;

&lt;p&gt;[注意]以下内容以mac os为准，其他系统请举一反三，或者换一个mac ^_^&lt;/p&gt;

&lt;h3 id=&#34;2-生成静态博客:bc48ff5599e6287f536e00689641cade&#34;&gt;2.生成静态博客&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    hugo new site /path/to/site
    cd /path/to/site

    //安装一款主题，比如我写的主题
   git remote add -f we https://github.com/xiaomingplus/hugo-theme-we.git
   git subtree add --prefix=themes/we we master --squash

    //开始写文章吧
    hugo new about.md
    //用你喜欢的markdown编辑器开始写文章吧。
    //编辑好并保存之后
    hugo server -t=we -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到这里，你的博客就可以在本地跑起来了，访问&lt;code&gt;http://127.0.0.1:1313/&lt;/code&gt;你可以看到下图的内容：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/d9f8fd81gw1ezzpv460rnj21gp0setab.jpg&#34; alt=&#34;&#34; /&gt;
其中&lt;code&gt;content&lt;/code&gt;文件夹存放你的原始文档，&lt;code&gt;public&lt;/code&gt;存放生成的html静态文档，你可以把public的静态文档放在任何可以存放静态文档的地方来供别人访问。&lt;/p&gt;

&lt;h3 id=&#34;3-利用github进行托管:bc48ff5599e6287f536e00689641cade&#34;&gt;3.利用github进行托管&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;//登录github账户，直接创建分支username.github.io
//(username为你在github的用户名，下同)，不需要初始化
//进入本地的blog主目录
cd /path/to/site

//配置博客,把`baseurl`的值设置为http://username.github.io/&amp;quot;，保存
vi config.toml

//重新生成静态博客
hugo -t=we -D

//上传public内的文件到username.github.io项目
cd public
git init
git add .
git commit -m &#39;for init blog&#39;
git remote add origin git@github.com:username/username.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到这里，你自己的博客在github上的托管已全部完成，一般来说，过一会儿（不超过10分钟），你就可以用：&lt;a href=&#34;http://username.github.io&#34;&gt;http://username.github.io&lt;/a&gt; 来访问你的博客了。&lt;/p&gt;

&lt;h3 id=&#34;4-使用脚本一键部署:bc48ff5599e6287f536e00689641cade&#34;&gt;4.使用脚本一键部署&lt;/h3&gt;

&lt;p&gt;每次输入那么多命令，烦不烦啊，所以有了这个一键部署的脚本，这样，写完文章后，只需执行一个命令即可发布在2个博客了。复制以下内容到&lt;code&gt;/path/to/site&lt;/code&gt;目录下的&lt;code&gt;deploy.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
then msg=&amp;quot;$1&amp;quot;
fi

hugo -t=we -D

cd public
git add -A
git commit -m &amp;quot;$msg&amp;quot;
git push --force -u origin master

cd ../
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;继续：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//复制以上脚本内容到deploy.sh
vi deploy.sh

//给脚本文件可执行权限
chmod +x deploy.sh

//再写一篇文章呗
hugo new doc/hugo-quick-start.md

//写完保存后，执行一键部署
./deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，你的博文已经发布在你的个人博客了。（可能会有一点点延迟）&lt;/p&gt;

&lt;p&gt;demo参见我的博客与团队博客：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xiaomingplus.com&#34;&gt;http://xiaomingplus.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>